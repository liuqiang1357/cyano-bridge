{"version":3,"sources":["webpack://CyanoMobile/webpack/bootstrap","webpack://CyanoMobile/./src/CyanoBridge.ts","webpack://CyanoMobile/./src/client/asset.ts","webpack://CyanoMobile/./src/client/identity.ts","webpack://CyanoMobile/./src/client/index.ts","webpack://CyanoMobile/./src/client/message.ts","webpack://CyanoMobile/./src/client/provider.ts","webpack://CyanoMobile/./src/client/proxy.ts","webpack://CyanoMobile/./src/client/qrcode.ts","webpack://CyanoMobile/./src/client/smartcontract.ts","webpack://CyanoMobile/./src/index.ts","webpack://CyanoMobile/./src/utils.ts"],"names":[],"mappings":"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","file":"browser.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import { randomId } from './utils';\n\nclass CyanoBridge {\n\n    version: string;\n    listener: (e: any) => any;\n    timeout: number = 3000;\n    handlers: any;\n    checkInterval: number;\n    injected: boolean;\n    pendingMsgs: any [];\n\n    constructor(timeout?: number) {\n        this.version = 'v1.0.0';\n        this.handlers = {};\n        if (timeout) {\n            this.timeout = timeout;\n        }\n        this.injected = false;\n        this.pendingMsgs = [];\n    }\n\n    call(req: any) {\n        const id = randomId();\n        req.id = id;\n        return new Promise((resolve, reject) => {\n            const msg = btoa(encodeURIComponent(JSON.stringify(req)));\n            const uri = 'ontprovider://ont.io?params=' + msg;\n            this.sendMessage(uri);\n            this.handleMessageEvent(id, resolve, reject, req.action, req.needTimeout);\n        });\n    }\n\n    invokeRead() {\n        throw new Error('invokeRead not supported yet.');\n    }\n\n    parseMessage(msg: string): any {\n        return JSON.parse(decodeURIComponent(atob(msg)));\n    }\n\n    onMessage(handler: (res: any) => {}) {\n        if (this.listener) {\n            this.offMessage();\n        }\n        const listener = (e: any) => {\n            const res = this.parseMessage(e.data);\n            handler(res);\n        };\n        window.document.addEventListener('message', listener);\n        this.listener = listener;\n    }\n\n    offMessage() {\n        window.document.removeEventListener('message', this.listener);\n    }\n\n    private sendMessage(msg: string) {\n        // provider will inject originalPostMessage method in js\n        // detect this method to decide when to send msssage\n        if (this.injected) {\n            window.postMessage(msg, '*');\n            return;\n        }\n        if (this.checkInterval) {\n            this.pendingMsgs.push(msg);\n            return;\n        }\n        this.checkInterval = window.setInterval(() => {\n            if ((window as any).originalPostMessage) {\n                window.postMessage(msg, '*');\n                this.injected = true;\n                this.pendingMsgs.forEach((m: string) => {\n                    window.postMessage(m, '*');\n                });\n                window.clearInterval(this.checkInterval);\n            }\n        }, 100);\n    }\n\n    private handleMessageEvent(\n        id: string,\n        resolve: any,\n        reject: any,\n        action: string,\n        needTimeout:\n        boolean = false\n        ) {\n        const that = this;\n        // tslint:disable-next-line:only-arrow-functions\n        const handler = function(event: any) {\n            const message = event.data;\n            if (!message) {\n                reject(event);\n            }\n            const res = that.parseMessage(message);\n            if (!res.id) {\n                reject('No message id');\n            }\n            if (!that.handlers[res.id]) {\n                reject('No message handler');\n            }\n            if (res.id !== handler.id) {\n                return;\n            }\n            document.removeEventListener('message', that.handlers[res.id]);\n            delete that.handlers[res.id];\n            if (res.action === action) {\n                resolve(res);\n            } else {\n                reject(res);\n            }\n        } as any;\n        handler.id = id;\n        this.handlers[id] = handler;\n        document.addEventListener('message', this.handlers[id]);\n        if (needTimeout) {\n            setTimeout(() => {\n                reject('Time out');\n            }, this.timeout);\n        }\n    }\n\n}\n\nexport default CyanoBridge;\n","import { call, version } from './proxy';\nimport { scApi } from './smartcontract';\n\nexport type Asset = 'ONT' | 'ONG' | string;\n\nexport const assetApi = {\n    getAccount(params?: { dappName: string, dappIcon: string }) {\n        const req = {\n            action: 'getAccount',\n            version,\n            params,\n            needTimeout: true\n        };\n        return call(req);\n    },\n\n    transfer({ from, to, asset, amount, gasPrice, gasLimit }:\n        { from: string, to: string; asset: Asset; amount: number | string, gasPrice?: number, gasLimit?: number }) {\n        const ONT_CONTRACT = '0100000000000000000000000000000000000000';\n        const ONG_CONTRACT = '0200000000000000000000000000000000000000';\n        const params = {\n            scriptHash: asset === 'ONT' ? ONT_CONTRACT : ONG_CONTRACT,\n            operation: 'transfer',\n            args: [\n                {\n                    name: 'from',\n                    type: 'Address',\n                    value: from\n                },\n                {\n                    name: 'to',\n                    type: 'Address',\n                    value: to\n                },\n                {\n                    name: 'amount',\n                    type: 'Long',\n                    value: amount // Handler for number and string is the same\n                }\n            ],\n            gasPrice: gasPrice = 500,\n            gasLimit: gasLimit = 20000,\n            payer: from\n        };\n        return scApi.invoke(params);\n    }\n\n};\n","import { call, version } from './proxy';\nimport { scApi } from './smartcontract';\n// const subactions = ['getRegistryOntidTx', 'faceRecognition', 'submit',\n//     'requestAuthorization', 'getAuthorizationInfo', 'decryptClaim', 'deleteOntid', 'exportOntid];\n\nexport const identityApi = {\n    getIdentity(params?: { dappName: string, dappIcon: string }) {\n        const req = {\n            action: 'getIdentity',\n            version,\n            params,\n            needTimeout: true\n        };\n        return call(req);\n    },\n    authentication(\n        params: {\n            subaction: string\n        }) {\n        // if (!params || !params.subaction) {\n        //     throw new Error('Invalid params. \"subaction\" missing.');\n        // }\n        // if (subactions.findIndex((item) => item === params.subaction) < 0) {\n        //     throw new Error('Invalid params. Wrong \"subaction\" ' + params.subaction);\n        // }\n        const req = {\n            action: 'authentication',\n            version,\n            params\n        };\n        return call(req);\n    },\n\n    authorization(\n        params: {\n            subaction: string\n            // seqno: string,\n            // user_ontid: string,\n            // app_ontid: string,\n            // to_ontid: string,\n            // callback: string,\n            // auth_template: string\n        }\n    ) {\n        const req = {\n            action: 'authorization',\n            version,\n            params\n        };\n        // if (!params || !params.subaction) {\n        //     throw new Error('Invalid params. \"subaction\" missing.');\n        // }\n        // if (subactions.findIndex((item) => item === params.subaction) < 0) {\n        //     throw new Error('Invalid params. Wrong \"subaction\" ' + params.subaction);\n        // }\n        return call(req);\n    },\n\n    registerOntId({ontid, publicKey, payer, gasPrice, gasLimit}:\n         {ontid: string, publicKey: string, payer: string, gasPrice?: number, gasLimit?: number}) {\n        const ONTID_CONTRACT = '0300000000000000000000000000000000000000';\n        const params = {\n            scriptHash: ONTID_CONTRACT,\n            operation: 'regIDWithPublicKey',\n            args: [\n                {\n                    name: 'ontid',\n                    type: 'String',\n                    value: ontid\n                },\n                {\n                    name: 'pk',\n                    type: 'ByteArray',\n                    value: publicKey\n                }\n            ],\n            gasPrice: gasPrice = 500,\n            gasLimit: gasLimit = 20000,\n            payer\n        };\n        return scApi.invoke(params);\n    },\n\n    getDDO(ontid: string) {\n        const ONTID_CONTRACT = '0300000000000000000000000000000000000000';\n        const params = {\n            scriptHash: ONTID_CONTRACT,\n            operation: 'getDDO',\n            args: [\n                {\n                    name: 'ontid',\n                    type: 'String',\n                    value:  ontid\n                }\n            ],\n            gasPrice: 500,\n            gasLimit: 20000\n        };\n        return scApi.invokeRead(params);\n    }\n};\n","import { assetApi as asset } from './asset';\nimport { identityApi as identity } from './identity';\nimport { messageApi as message } from './message';\nimport { providerApi as provider } from './provider';\nimport { qrcodeApi as qrcode } from './qrcode';\nimport { scApi as smartContract } from './smartcontract';\n\nimport { registerClient } from './proxy';\n\nconst api = {\n    asset,\n    identity,\n    message,\n    smartContract,\n    qrcode,\n    provider\n};\n\nexport { registerClient, api};\n","import { call, version } from './proxy';\n\nexport const messageApi = {\n    signMessage(params: {message: string}) {\n        const req = {\n            action: 'signMessage',\n            version,\n            params,\n            needTimeout: false\n        };\n        return call(req);\n    },\n\n    login(params: {\n        message: string,\n        type: string,\n        dappName: string,\n        dappIcon: string,\n        expired: number,\n        callback: string\n    }) {\n        if (!params.message || typeof params.message !== 'string') {\n            throw new Error('Parameter for login must contain a message.');\n        }\n        if (!params.type) {\n            params.type = 'account';\n        }\n        const req = {\n            action: 'login',\n            version,\n            params,\n            needTimeout: false\n        };\n        return call(req);\n    }\n};\n","import { call, version } from './proxy';\n\nexport const providerApi = {\n    getProvider() {\n        const req = {\n            action: 'getProvider',\n            version,\n            needTimeout: true\n        };\n        return call(req);\n    }\n};\n","import CyanoBridge from '../CyanoBridge';\n\nlet cb: CyanoBridge;\n\nexport function registerClient(timeout: number = 3000) {\n    cb = new CyanoBridge(timeout);\n}\n\nexport async function call(request: any) {\n    return cb.call(request);\n}\n\nexport const version = '1.0.0';\n","import { randomId } from '../utils';\nimport { version } from './proxy';\n\nexport const qrcodeApi = {\n    login(params: {\n        type: string,\n        dappName: string,\n        dappIcon: string,\n        message: string,\n        expire: number,\n        callback: string\n    }): string {\n        if (params.type !== 'ontid' && params.type !== 'account') {\n            throw new Error('Invalid parameter type ' + params.type);\n        }\n        const req = {\n            action: 'login',\n            version,\n            id: randomId(),\n            params\n        };\n        return JSON.stringify(req);\n    },\n\n    invoke(params: {\n        login: boolean,\n        callback: string,\n        qrcodeUrl: string\n    }): string {\n        const req = {\n            action: 'invoke',\n            version,\n            id: randomId(),\n            params\n        };\n        return JSON.stringify(req);\n    }\n};\n","import { makeInvokeFunction } from '../utils';\nimport { call, version } from './proxy';\n\n// tslint:disable-next-line:one-variable-per-declaration\nexport const scApi = {\n    invoke(params: {\n        scriptHash: string,\n        operation: string,\n        args: any[],\n        gasPrice: number,\n        gasLimit: number,\n        payer: string,\n        config?: {\n            login: boolean,\n            message: string,\n            url: string\n        }\n    }) {\n        if (!params.scriptHash || !params.operation || !params.args) {\n            throw new Error('Invalid params.');\n        }\n        if (!params.payer) {\n            throw new Error('No payer.');\n        }\n\n        if (!params.config) {\n            params.config = {\n                login: true,\n                message: '',\n                url: ''\n            };\n        }\n        const functionParams = makeInvokeFunction(params.operation, params.args);\n        const req: any = {\n            action: 'invoke',\n            version,\n            params: {\n                login: params.config.login,\n                url: params.config.url,\n                message: params.config.message,\n                invokeConfig: {\n                    contractHash: params.scriptHash,\n                    functions: [functionParams],\n                    payer: params.payer,\n                    gasPrice: params.gasPrice ? params.gasPrice : 500,\n                    gasLimit: params.gasLimit ? params.gasLimit : 20000\n                }\n            }\n        };\n        return call(req);\n    },\n    invokeRead(params: {\n        scriptHash: string,\n        operation: string,\n        args: any[],\n        gasPrice: number,\n        gasLimit: number,\n        payer?: string,\n        config?: {\n            login: boolean,\n            message: string,\n            url: string\n        }\n    }) {\n        if (!params.scriptHash || !params.operation || !params.args) {\n            throw new Error('Invalid params.');\n        }\n\n        if (!params.config) {\n            params.config = {\n                login: true,\n                message: '',\n                url: ''\n            };\n        }\n        const functionParams = makeInvokeFunction(params.operation, params.args);\n        const req: any = {\n            action: 'invokeRead',\n            version,\n            params: {\n                login: params.config.login,\n                url: params.config.url,\n                message: params.config.message,\n                invokeConfig: {\n                    contractHash: params.scriptHash,\n                    functions: [functionParams],\n                    payer: params.payer,\n                    gasPrice: params.gasPrice ? params.gasPrice : 500,\n                    gasLimit: params.gasLimit ? params.gasLimit : 20000\n                }\n            }\n        };\n        return call(req);\n    },\n    invokePasswordFree(params: {\n        scriptHash: string,\n        operation: string,\n        args: any[],\n        gasPrice: number,\n        gasLimit: number,\n        payer: string,\n        config: {\n            login: boolean,\n            message: string,\n            url: string\n        }\n    }) {\n        if (!params.scriptHash || !params.operation || !params.args || params.args.length === 0) {\n            throw new Error('Invalid params.');\n        }\n\n        if (!params.payer) {\n            throw new Error('No payer.');\n        }\n\n        if (!params.config) {\n            params.config = {\n                login: true,\n                message: '',\n                url: ''\n            };\n        }\n        const functionParams = makeInvokeFunction(params.operation, params.args);\n        const req: any = {\n            action: 'invokePasswordFree',\n            version,\n            params: {\n                login: params.config.login,\n                url: params.config.url,\n                message: params.config.message,\n                invokeConfig: {\n                    contractHash: params.scriptHash,\n                    functions: [functionParams],\n                    payer: params.payer,\n                    gasPrice: params.gasPrice ? params.gasPrice : 500,\n                    gasLimit: params.gasLimit ? params.gasLimit : 20000\n                }\n            }\n        };\n        return call(req);\n    }\n};\n","// import CyanoBridge from './CyanoBridge';\nimport * as client from './client';\n// export { CyanoBridge };\n\nexport { client };\n","export function formatArgItem(p: any) {\n    if (p.type === 'Boolean' || p.type === 'Integer') {\n        return {\n            name: p.name,\n            value: p.value\n        };\n    } else if (p.type === 'String' || p.type === 'ByteArray' || p.type === 'Long' || p.type === 'Address') {\n        return {\n            name: p.name,\n            value: p.type + ':' + p.value\n        };\n    } else if (p.type === 'Array') {\n        return {\n            name: p.name,\n            value: p.value.map((v: any) => formatArgItem(v))\n        };\n    } else if (p.type === 'Map') {\n        const val: any = {};\n        for (const k of Object.keys(p.value)) {\n            val[k] = formatArgItem(p.value[k]);\n        }\n        return {\n            name: p.name,\n            value: val\n        };\n    } else {\n        throw new Error('Invalid parmeter type: ' + JSON.stringify(p));\n    }\n}\n\nexport function makeInvokeFunction(operation: string, args: any[]) {\n    const params = [];\n    for (const p of args) {\n        params.push(formatArgItem(p));\n    }\n    const obj = {\n        operation,\n        args: params\n    };\n    return obj;\n}\n\nexport function randomId() {\n    return Math.random().toString(36).substring(2, 10);\n}\n\nexport function ready(callback: () => void) {\n    if (typeof document === 'undefined') {\n        throw new Error('document-ready only runs in the browser');\n    }\n    const state = document.readyState;\n    if (state === 'complete' || state === 'interactive') {\n        return setTimeout(callback, 0);\n    }\n\n    document.addEventListener('DOMContentLoaded', function onLoad() {\n        callback();\n    });\n}"],"sourceRoot":""}